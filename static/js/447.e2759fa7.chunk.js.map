{"version":3,"file":"static/js/447.e2759fa7.chunk.js","mappings":"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","sources":["ApiServis.jsx","webpack://goit-react-hw-05-movies/./src/components/Endpoint/MoviesID/MoviesList.module.css?08ea","components/Endpoint/MoviesID/MoviesList.js","components/Endpoint/SearchMovies/SearchMovies.styled.js","components/Endpoint/SearchMovies/SearchMovies.jsx","pages/Movies/Movies.jsx"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '229fbe9d63b5c8a5f0b4044564440235';\n\nexport const getSearchMovies = async request => {\n  const response = await axios.get(\n    `/search/movie?api_key=${API_KEY}&query=${request}`\n  );\n  return response.data;\n};\n\nexport const getTrendigs = async () => {\n  const response = await axios.get(`trending/movie/day?api_key=${API_KEY}`);\n  return response.data;\n};\n\nexport const getDetailsMovies = async id => {\n  const response = await axios.get(`/movie/${id}?api_key=${API_KEY}`);\n  return response.data;\n};\n\nexport const getCastsMovies = async id => {\n  const response = await axios.get(`/movie/${id}/credits?api_key=${API_KEY}`);\n  return response.data;\n};\n\nexport const getReviewsMovies = async id => {\n  const response = await axios.get(`/movie/${id}/reviews?api_key=${API_KEY}`);\n  return response.data;\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"main\":\"MoviesList_main__1X1mn\",\"list\":\"MoviesList_list__VwURv\",\"item\":\"MoviesList_item__2bXhP\",\"NavLink\":\"MoviesList_NavLink__KezVC\",\"img\":\"MoviesList_img__LEgq7\",\"wrap\":\"MoviesList_wrap__s+HYx\",\"title\":\"MoviesList_title__fCAxB\",\"text\":\"MoviesList_text__tFxAl\"};","import { Link, useLocation } from 'react-router-dom';\nimport { NavLink } from 'react-router-dom';\nimport s from './MoviesList.module.css';\nimport PropTypes from 'prop-types';\n\nexport const MovieList = ({ movies }) => {\n  const moviesPicture = {\n    base_url: 'https://image.tmdb.org/t/p/',\n    size: 'w300',\n  };\n\n  const location = useLocation();\n  return (\n    <main className={s.main}>\n      <ul className={s.list}>\n        {movies.map(({ id, title, poster_path, vote_average }) => {\n          if (poster_path === null) {\n            return (\n              <li className={s.item} key={id}>\n                <NavLink\n                  className={s.NavLink}\n                  to={`${id}`}\n                  state={{ from: location }}\n                >\n                  <div>\n                    {' '}\n                    <img\n                      className={s.img}\n                      alt={title}\n                      height={450}\n                      width={300}\n                      src=\"https://www.pacificfoodmachinery.com.au/media/catalog/product/placeholder/default/no-product-image-400x400_8.png\"\n                    />\n                  </div>\n                  <div className={s.wrap}>\n                    <h3 className={s.title}>{title}</h3>\n                  </div>\n                </NavLink>\n              </li>\n            );\n          }\n          return (\n            <li className={s.item} key={id}>\n              <Link to={`${id}`} state={{ from: location }}>\n                <div>\n                  <img\n                    className={s.img}\n                    alt={title}\n                    src={`${moviesPicture.base_url}${moviesPicture.size}${poster_path}`}\n                  />\n                </div>\n                <div className={s.wrap}>\n                  <h3 className={s.title}>{title}</h3>\n                  <p className={s.text}></p>\n                </div>\n              </Link>\n            </li>\n          );\n        })}\n      </ul>\n    </main>\n  );\n};\n\nMovieList.propTypes = {\n  trendingMovies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      title: PropTypes.string.isRequired,\n    })\n  ),\n};\n\nexport default MovieList;\n","import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  background-color: #f5f5f5;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  min-height: 64px;\n  padding-right: 24px;\n  padding-left: 24px;\n  padding-top: 12px;\n  padding-bottom: 12px;\n`;\n\nexport const Wrap = styled.div`\n  display: flex;\n  align-items: center;\n  width: 100%;\n  max-width: 600px;\n  background-color: rgb(255, 255, 255);\n  border-radius: 3px;\n  overflow: hidden;\n`;\nexport const Input = styled.input`\n  display: flex;\n  font-size: 20px;\n  align-items: center;\n  padding: 15px;\n  width: 100%;\n  max-width: 600px;\n  background-color: #fff;\n  border-radius: 3px;\n  overflow: hidden;\n`;\n","// import { Wrapper, Input, Icon } from './SearchBox.styled.js';\n\n// import { useState } from 'react';\n// import { toast } from 'react-toastify';\n// import PropTypes from 'prop-types';\n// import s from './Searchbar.module.css';\n\n// import React from 'react';\n\n// export function SearchMovies({ onSubmit }) {\n//   const [searchText, setSearchText] = useState('');\n//   const handleSetQuery = e => {\n//     setSearchText(e.target.value);\n//   };\n\n//   const handleSubmit = e => {\n//     e.preventDefault();\n//     const normaliseRequest = searchText.toLowerCase().trim();\n//     if (!normaliseRequest) {\n//       return toast('enter your request please!', {\n//         position: 'top-center',\n//         hideProgressBar: true,\n//       });\n//     }\n\n//     onSubmit(normaliseRequest);\n//     setSearchText('');\n//   };\n//   return (\n//     <Wrapper>\n//       <form onSubmit={handleSubmit}>\n//         <Input\n//           onChange={handleSetQuery}\n//           value={searchText}\n//           name=\"query\"\n//           className={s.SearchFormInput}\n//           type=\"text\"\n//           autoComplete=\"off\"\n//           autoFocus\n//           placeholder=\"Що шукаємо ?\"\n//           pattern=\"^[0-9a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n//           title=\"Щоб щось знайти, введіть пошукове слово, що складається з букв,апострофа,тире, цифр и пробілу.\"\n//         />\n//         <button type=\"submit\">\n//           <Icon />\n//         </button>\n//       </form>\n//     </Wrapper>\n//   );\n// }\n\n// SearchMovies.propTypes = {\n//   onSubmit: PropTypes.func.isRequired,\n//   // handleSubmit: PropTypes.func.isRequired,\n// };\n\n// export default SearchMovies;\nimport { useSearchParams } from 'react-router-dom';\nimport { Input, Wrap, Wrapper } from './SearchMovies.styled';\n\nexport const SearchMovies = ({ onSubmit }) => {\n  const [searchParam, setSearchParam] = useSearchParams();\n  const query = searchParam.get('query');\n\n  if (query !== '') {\n    onSubmit(query);\n  }\n\n  const handleInput = event => {\n    onSubmit(query);\n    setSearchParam({ query: event.target.value });\n  };\n\n  return (\n    <Wrapper>\n      <Wrap>\n        <Input type=\"text\" onChange={handleInput} value={query} />\n      </Wrap>\n    </Wrapper>\n  );\n};\n\nexport default SearchMovies;\n","import { getSearchMovies } from '../../ApiServis';\nimport MovieList from '../../components/Endpoint/MoviesID/MoviesList';\nimport { useState } from 'react';\nimport { Outlet } from 'react-router-dom';\nimport { SearchMovies } from '../../components/Endpoint/SearchMovies/SearchMovies';\n\nexport const Movies = () => {\n  const [movies, setMovies] = useState([]);\n\n  const handleInput = async event => {\n    return await getSearchMovies(event).then(response =>\n      setMovies(response.results)\n    );\n  };\n\n  return (\n    <div>\n      <SearchMovies onSubmit={handleInput}></SearchMovies>\n      <MovieList movies={movies} />\n      <Outlet />\n    </div>\n  );\n};\n\nexport default Movies;\n"],"names":["axios","API_KEY","getSearchMovies","request","response","data","getTrendigs","getDetailsMovies","id","getCastsMovies","getReviewsMovies","movies","moviesPicture","location","useLocation","className","s","map","title","poster_path","vote_average","to","state","from","alt","height","width","src","Wrapper","styled","Wrap","Input","SearchMovies","onSubmit","useSearchParams","searchParam","setSearchParam","query","get","type","onChange","event","target","value","Movies","useState","setMovies","handleInput","then","results"],"sourceRoot":""}