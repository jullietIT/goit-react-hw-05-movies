{"version":3,"file":"static/js/488.00ba2cdc.chunk.js","mappings":"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","sources":["ApiServis.jsx","webpack://goit-react-hw-05-movies/./src/components/Endpoint/MoviesList/MoviesList.module.css?c2ef","components/Endpoint/MoviesList/MoviesList.js","webpack://goit-react-hw-05-movies/./src/components/Endpoint/SearchMovies/Searchbar.module.css?2b1d","components/Endpoint/SearchMovies/SearchMovies.jsx","pages/Movies/Movies.jsx"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '229fbe9d63b5c8a5f0b4044564440235';\n\nexport const getSearchMovies = async request => {\n  const response = await axios.get(\n    `/search/movie?api_key=${API_KEY}&query=${request}`\n  );\n  return response.data;\n};\n\nexport const getTrendigs = async () => {\n  const response = await axios.get(`trending/movie/day?api_key=${API_KEY}`);\n  return response.data;\n};\n\nexport const getDetailsMovies = async id => {\n  const response = await axios.get(`/movie/${id}?api_key=${API_KEY}`);\n  return response.data;\n};\n\nexport const getCastsMovies = async id => {\n  const response = await axios.get(`/movie/${id}/credits?api_key=${API_KEY}`);\n  return response.data;\n};\n\nexport const getReviewsMovies = async id => {\n  const response = await axios.get(`/movie/${id}/reviews?api_key=${API_KEY}`);\n  return response.data;\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"main\":\"MoviesList_main__npN9J\",\"list\":\"MoviesList_list__EaCqe\",\"item\":\"MoviesList_item__d-E85\",\"NavLink\":\"MoviesList_NavLink__MI8vZ\",\"img\":\"MoviesList_img__Bh-Kq\",\"wrap\":\"MoviesList_wrap__H3mHY\",\"title\":\"MoviesList_title__Q2Wjo\",\"text\":\"MoviesList_text__XDZ8i\"};","import { Link, useLocation } from 'react-router-dom';\n\nimport s from './MoviesList.module.css';\nimport PropTypes from 'prop-types';\n\nexport const MovieList = ({ movies }) => {\n  const moviesPicture = {\n    base_url: 'https://image.tmdb.org/t/p/',\n    size: 'w300',\n    noimageURL:\n      'https://www.pacificfoodmachinery.com.au/media/catalog/product/placeholder/default/no-product-image-400x400_8.png',\n  };\n\n  const location = useLocation();\n  return (\n    <main className={s.main}>\n      <ul className={s.list}>\n        {movies.map(({ id, title, poster_path, vote_average }) => {\n          const poster = poster_path\n            ? `${moviesPicture.base_url}${moviesPicture.size}${poster_path}`\n            : moviesPicture.noimageURL;\n\n          return (\n            <li className={s.item} key={id}>\n              <Link to={`/movies/${id}`} state={{ from: location }}>\n                {/* Завдяки state={{ from: location }}>  ми переходимо на ту сторінку  з якої прийшли*/}\n                <div>\n                  <img className={s.img} alt={title} src={poster} />\n                </div>\n                <div className={s.wrap}>\n                  <h3 className={s.title}>{title}</h3>\n                  <p className={s.text}></p>\n                </div>\n              </Link>\n            </li>\n          );\n        })}\n      </ul>\n    </main>\n  );\n};\n\nMovieList.propTypes = {\n  trendingMovies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      title: PropTypes.string.isRequired,\n      poster: PropTypes.string.isRequired,\n    })\n  ),\n};\n\nexport default MovieList;\n","// extracted by mini-css-extract-plugin\nexport default {\"wrap\":\"Searchbar_wrap__Q762D\",\"searcInput\":\"Searchbar_searcInput__L9puQ\",\"button\":\"Searchbar_button__azl1X\"};","import { useState } from 'react';\nimport { toast } from 'react-toastify';\nimport PropTypes from 'prop-types';\nimport s from './Searchbar.module.css';\nimport { ImSearch } from 'react-icons/im';\nimport React from 'react';\n\nexport function SearchMovies({ onSubmit }) {\n  const [searchText, setSearchText] = useState('');\n  const handleSetQuery = e => {\n    setSearchText(e.target.value);\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const normaliseRequest = searchText.toLowerCase().trim();\n    if (!normaliseRequest) {\n      return toast('enter your request please!', {\n        position: 'top-center',\n        hideProgressBar: true,\n      });\n    }\n\n    onSubmit(normaliseRequest);\n    setSearchText('');\n  };\n  return (\n    <div className={s.wrap}>\n      <form className={s.searchForm} onSubmit={handleSubmit}>\n        <input\n          onChange={handleSetQuery}\n          value={searchText}\n          name=\"query\"\n          className={s.searcInput}\n          type=\"text\"\n          autoComplete=\"off\"\n          autoFocus\n          placeholder=\"search movies ...\"\n          pattern=\"^[0-9a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Щоб щось знайти, введіть пошукове слово, що складається з букв,апострофа,тире, цифр и пробілу.\"\n        />\n        <button type=\"submit\" className={s.button}>\n          <ImSearch size=\"24\" />\n        </button>\n      </form>\n    </div>\n  );\n}\n\nSearchMovies.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n  // handleSubmit: PropTypes.func.isRequired,\n};\n\nexport default SearchMovies;\n","import { getSearchMovies } from '../../ApiServis';\nimport MovieList from '../../components/Endpoint/MoviesList/MoviesList';\nimport { useState, useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { SearchMovies } from '../../components/Endpoint/SearchMovies/SearchMovies';\n\nexport const Movies = () => {\n  const [movies, setMovies] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  useEffect(() => {\n    const query = searchParams.get('query'); // за допомогою цього методу (searchParams.get) витягнули назву \" query \"\n\n    if (!query) return; //якщо нічого не має, повертаємо\n\n    getSearchMovies(query).then(response => setMovies(response.results));\n  }, [searchParams]);\n\n  const handleInput = query => {\n    setSearchParams({ query }); //виконується метод і у query записується значеня пошуку (у строку пошуку у браузурі)\n  };\n\n  return (\n    <div>\n      <SearchMovies onSubmit={handleInput}></SearchMovies>\n      {/* <MovieList movies={trendingMovies} />    Стандартний патерн !!movies.length &&   якщо є фільми, то ми їх рендеримо*/}\n      {!!movies.length && <MovieList movies={movies} />}\n    </div>\n  );\n};\n\nexport default Movies;\n"],"names":["axios","API_KEY","getSearchMovies","request","response","data","getTrendigs","getDetailsMovies","id","getCastsMovies","getReviewsMovies","movies","moviesPicture","location","useLocation","className","s","map","title","poster_path","poster","vote_average","to","state","from","alt","src","SearchMovies","onSubmit","useState","searchText","setSearchText","e","preventDefault","normaliseRequest","toLowerCase","trim","toast","position","hideProgressBar","onChange","target","value","name","type","autoComplete","autoFocus","placeholder","pattern","size","Movies","setMovies","useSearchParams","searchParams","setSearchParams","useEffect","query","get","then","results","length"],"sourceRoot":""}